{
    "copyright": "Copyright 2016, EMC, Inc.",
    "definitions": {
        "SimpleCommandItem": {
            "description": "The command line including the arguments",
            "type": "string",
            "minLength": 1,
            "readonly": true
        },
        "AdvanceCommandItem": {
            "type": "object",
            "properties": {
                "catalog": {
                    "description": "Indicate the command result should be stored into catalog and specify the parameter while storing catalog",
                    "type": "object",
                    "properties": {
                        "source": {
                            "description": "The source where the catalog data is from",
                            "type": "string",
                            "minLength": 1
                        },
                        "format": {
                            "description": "The catalog format, such as 'json', 'raw', .etc",
                            "type": "string",
                            "enum": ["json", "raw"]
                        }
                    },
                    "required": ["source"],
                    "additionalProperties": false
                },
                "command": {
                    "$ref": "#/definitions/SimpleCommandItem"
                },
                "retries": {
                    "description": "The total retry times if the command execution fails",
                    "type": "integer",
                    "minimum": 0
                },
                "downloadUrl": {
                    "description": "Specify the download URL (relative to RackHD southbound API server) if the command needs to download some data or script from RackHD before execution",
                    "type": "string",
                    "pattern": "^/[a-zA-Z0-9+-.#?=\\\/]+"
                },
                "acceptedResponseCodes": {
                    "description": "The acceptable exit codes to mark the command success. Defaultly, exit code 0 means the command success, otherwise failure. If you want to specify other exit codes as success, write them here",
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "uniqueItems": true,
                    "minItems": 1
                },
                "timeout": {
                    "description": "The timeout of the command execution, in milliseconds. (Some command may not support this parameter), for example '/api/current/files/abc.txt'",
                    "type": "integer",
                    "minimum": 0
                }
            },
            "required": ["command"],
            "additionalProperties": false
        },
        "CommandItem": {
            "oneOf": [
                { "$ref": "#/definitions/SimpleCommandItem" },
                { "$ref": "#/definitions/AdvanceCommandItem" }
            ]
        },
        "Commands": {
            "description": "The list of commands that will be exuected in microkernel, all commands are exuected one by one in order",
            "type": "array",
            "items": {
                "$ref": "#/definitions/CommandItem"
            },
            "minItems": 1,
            "readonly": true
        },
        "RunOnlyOnce": {
            "description": "Indicate whether all commands should only be run once by node, if true, any additional request from node will be ignored. Default is true",
            "type": "boolean"
        },
        "Options": {
            "description": "The options of linux-command job",
            "type": "object",
            "properties": {
                "commands": {
                    "$ref": "#/definitions/Commands"
                },
                "runOnlyOnce": {
                    "$ref": "#/definitions/RunOnlyOnce"
                }
            },
            "required": ["commands"]
        }
    },
    "properties": {
        "commands": {
            "$ref": "#/definitions/Commands"
        },
        "runOnlyOnce": {
            "$ref": "#/definitions/RunOnlyOnce"
        }
    }
}
